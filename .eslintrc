{
  "root": true,
  "env": {
    "es2021": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": "latest"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts"]
    },
    "import/resolver": {
      "node": {
        "paths": ["~/"],
        "extensions": [".js", ".ts"]
      },
      "alias": {
        "map": [["~", "./"]],
        "extensions": [".ts", ".js"]
      }
    },
    "import/ignore": ["node_modules"]
  },
  "plugins": ["@typescript-eslint", "eslint-plugin-import-helpers", "prettier"],
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:eslint-comments/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    "prettier"
  ],
  "ignorePatterns": ["**/node_modules/**", "**/dist/**", "README.md"],
  "rules": {
    "no-undef": "off",
    "eqeqeq": "error",
    "prettier/prettier": "warn",
    "prefer-const": "warn",
    "eslint-comments/no-unused-disable": "error",
    "@typescript-eslint/no-unused-vars": "error",
    // empty functions are helpful for defining default values
    "@typescript-eslint/no-empty-function": "off",
    "unicorn/prefer-node-protocol": "off",
    "unicorn/prefer-module": "off",
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "kebabCase": true
        },
        "ignore": ["/^$/", "README.md$"]
      }
    ],
    "import/order": [
      "warn",
      {
        "newlines-between": "always"
      }
    ],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "allowList": {
          "ref": true,
          "props": true
        }
      }
    ]
  }
}
